DROP PROCEDURE IF EXISTS GPA_PAGOS_CRUD;
CREATE OR REPLACE PROCEDURE GPA_PAGOS_CRUD (
    IN VPDATA JSON,
    IN VPCRUD VARCHAR
) AS $$
DECLARE

-- INFO. PORCEDURE
    INFSISTEMA   VARCHAR := 'GPA';
    INFPROCESO   VARCHAR := '00000';
    INFPROCEDURE VARCHAR := 'GPA_PAGOS_CRUD';
    INFVERSION   VARCHAR := '2024.02.26';

-- VARIABLES
    VLERROR BOOLEAN := FALSE;
    VLPAGO PAGOS%ROWTYPE;

BEGIN

    INFPROCESO := '00001';
    IF NOT LIB_CRUD_CHECK(VPCRUD) THEN
        RAISE EXCEPTION 'No es una operacion de CRUD Valida';
    END IF;

    INFPROCESO := '00002';
    SELECT CONTROL,GASTO,FECHA,IMPORTE,DETALLE 
      INTO VLPAGO.CONTROL,VLPAGO.GASTO,VLPAGO.FECHA,VLPAGO.IMPORTE,VLPAGO.DETALLE
      FROM JSON_POPULATE_RECORD(NULL::PAGOS, VPDATA);

    INFPROCESO := '00003';
    IF VPCRUD = 'C' THEN
        INSERT INTO PAGOS (GASTO,FECHA,IMPORTE,DETALLE)
            VALUES (VLPAGO.GASTO,VLPAGO.FECHA,VLPAGO.IMPORTE,VLPAGO.DETALLE);
    END IF;

    INFPROCESO := '00004';
    IF VPCRUD = 'U' THEN
        UPDATE PAGOS SET (GASTO,FECHA,IMPORTE,DETALLE)
            = (VLPAGO.GASTO,VLPAGO.FECHA,VLPAGO.IMPORTE,VLPAGO.DETALLE
        ) WHERE CONTROL = VLPAGO.CONTROL;
    END IF;

    INFPROCESO := '00005';
    IF VPCRUD = 'D' THEN
        DELETE FROM PAGOS WHERE CONTROL = VLPAGO.CONTROL;
    END IF;

EXCEPTION WHEN OTHERS THEN
    RAISE EXCEPTION '%', 
        LIB_ERROR_MSG(INFSISTEMA,INFPROCEDURE,INFVERSION,INFPROCESO, SQLERRM);

END
$$ LANGUAGE PLPGSQL;